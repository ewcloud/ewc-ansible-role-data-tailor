---
- name: Verify Linux distribution
  ansible.builtin.assert:
    that:
      - ( ansible_facts['distribution'] == 'Rocky' and ansible_facts['distribution_major_version'] in ['8', '9']) or (ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_major_version'] in ['22', '24'])
    fail_msg: "Supports RockyLinux and Ubuntu. Detected: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_major_version'] }}."
    success_msg: "Running supported {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_major_version'] }} distribution."

- name: Validate user inputs
  ansible.builtin.assert:
    that:
      - data_tailor_env_wipe is string and data_tailor_env_wipe != '' and data_tailor_env_wipe is defined
      - data_tailor_env_name is string and data_tailor_env_name is defined and data_tailor_env_name != ''
      - conda_prefix is string and conda_prefix is defined and conda_prefix != ''
    fail_msg: "Input validation failed. See README.md for information on required inputs and their format."
    success_msg: "User input configuration is valid."

- name: Set exists data tailor environment based on user input
  ansible.builtin.set_fact:
    data_tailor_env_path: "{{ conda_prefix }}/envs/{{ data_tailor_env_name }}"

- name: Wipe existing conda environment
  ansible.builtin.file:
    path: "{{ data_tailor_env_path }}"
    state: absent
  when: data_tailor_env_wipe == "yes"
